@using BO
@model Pizzas.Models.PizzaVM

@{
    var choixPate = Pizza.PatesDisponibles;
    var ingredients = Pizza.IngredientsDisponibles;
}

    <div class="form-group">
        <label asp-for=@Model.Id class="control-label"></label>
        <input asp-for=@Model.Id class="form-control" readonly/>
        <span asp-validation-for=@Model.Id class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for=@Model.Nom class="control-label"></label>
        <input asp-for=@Model.Nom class="form-control" />
        <span asp-validation-for=@Model.Nom class="text-danger"></span>
    </div>

    <!--Choix de la pâte-->
    <div class="form-group">
        @Html.LabelFor(model => model.SelectionPate, htmlAttributes: new {@class="control-label col-md-2"})
        @Html.DropDownListFor(p => p.SelectionPate, choixPate.Select(p => new SelectListItem{ Text = p.Nom, Value = p.Id.ToString()}))
        @Html.ValidationMessageFor(p => p.SelectionPate, "", new { @class = "text-danger"})
    </div>

    <!--Choix des ingrédients-->
    <div class="form-group">
        @Html.LabelFor(model => model.SelectionIngredients, htmlAttributes: new { @class="control-label col-md-2" })
        @Html.ListBoxFor(i => i.SelectionIngredients, ingredients.Select(i => new SelectListItem{ Text = i.Nom, Value = i.Id.ToString() }))
        @Html.ValidationMessageFor(i => i.SelectionIngredients, "", new { @class = "text-danger"})
    </div>